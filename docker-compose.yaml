version: '3'

services:

  reverse_proxy:
    image: "nginx:latest"
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - certs:/etc/ssl
      - ./conf/nginx/conf.d:/etc/nginx/conf.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - chat-net
      - ldap-net
    depends_on:
      - chat

  chat:
    build: ./rocketchat
    restart: unless-stopped
    environment:
      ROOT_URL: http://chat.firmenessen.de
    depends_on:
      - chat_db
      - ldap
    expose:
      - 3000
    networks:
      - chat-net
      - ldap-net
    volumes:
      - rocketchat_uploads:/app/uploads

  chat_db:
    image: mongo:4.2
    restart: unless-stopped
    volumes:
     - rocketchat_mongo_db:/data/db
     #- ./data/dump:/dump
    command: mongod --oplogSize 128 --replSet rs0
    expose:
      - 27017
    networks:
      - chat-net

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove itself (it will not stay running)
  chat_db_init_replica:
    image: mongo:4.2
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo chat_db/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - chat_db
    networks:
      - chat-net

  ldap:
    image: osixia/openldap
    restart: unless-stopped
    expose:
      - 389
      - 636
    environment: # username: cn=admin,dc=example,dc=org
      - LDAP_ADMIN_PASSWORD=secret
    volumes:
      - ldap:/var/lib/ldap
      - ldap-conf:/etc/ldap/slapd.d
    networks:
      - ldap-net


  ldap-admin:
    image: osixia/phpldapadmin
    restart: unless-stopped
    expose:
      - 443
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=ldap
      - PHPLDAPADMIN_HTTPS=false 
    networks:
      - ldap-net

volumes:
  rocketchat_uploads:
  rocketchat_mongo_db:
  certs:
  ldap:
  ldap-conf:

networks:
  chat-net:
  ldap-net: