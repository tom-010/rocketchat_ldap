version: '3'

services:
  nginx:
    image: "nginx:latest"
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - certs:/etc/ssl
      - ./conf/nginx/conf.d:/etc/nginx/conf.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - ldap-net
    depends_on:
      - ldap
      - ldap-admin

  ldap:
    image: osixia/openldap
    restart: unless-stopped
    expose:
      - 389
      - 636
    environment: # username: cn=admin,dc=example,dc=org
      - LDAP_ADMIN_PASSWORD=secret
    volumes:
      - ldap:/var/lib/ldap
      - ldap-conf:/etc/ldap/slapd.d
    networks:
      - ldap-net


  ldap-admin:
    image: osixia/phpldapadmin
    restart: unless-stopped
    expose:
      - 443
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=ldap
      - PHPLDAPADMIN_HTTPS=false 
    networks:
      - ldap-net

  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      PORT: '3000'
      ROOT_URL: http://localhost:3000
      MONGO_URL: mongodb://mongo:27017/rocketchat
      MONGO_OPLOG_URL: mongodb://mongo:27017/local
      # MAIL_URL: smtp://smtp.email
      OVERWRITE_SETTING_LDAP_User_Search_Field: cn
      OVERWRITE_SETTING_LDAP_Sync_User_Avatar: 'false'
      OVERWRITE_SETTING_LDAP_Sync_User_Data_FieldMap: '{"givenName":"name", "Email":"email"}'
      OVERWRITE_SETTING_LDAP_Sync_User_Data: 'true'
      OVERWRITE_SETTING_LDAP_Username_Field: cn
      OVERWRITE_SETTING_LDAP_Authentication_Password: admin
      OVERWRITE_SETTING_LDAP_Authentication_UserDN: cn=admin,dc=rocket,dc=chat
      OVERWRITE_SETTING_LDAP_Authentication: 'true'
      OVERWRITE_SETTING_LDAP_BaseDN: ou=people,dc=rocket,dc=chat
      OVERWRITE_SETTING_LDAP_Host: openldap
      OVERWRITE_SETTING_LDAP_LDAP_Login_Fallback: 'true'
      OVERWRITE_SETTING_LDAP_Enable: 'true'
      OVERWRITE_SETTING_Allow_Marketing_Emails: 'false'
      OVERWRITE_SETTING_Apps_Framework_enabled: 'false'
      OVERWRITE_SETTING_Statistics_reporting: 'false'
      OVERWRITE_SETTING_Show_Setup_Wizard: "completed"
      INITIAL_USER: '{ "_id": "adminrc", "services": { "password": { "bcrypt": "$$2b$$10$$RoP1OQxuwzYgtxmHny/95.WUKc1MVuUv8mlbhluEticaArarcqLWa" }, "email2fa": { "enabled": false }, "emails": [ { "address": "admin@rocket.chat.localhost", "verified": true } ] }, "type": "user", "active": true, "roles": [ "user", "admin" ], "name": "Admin", "username": "rc.admin" }'
    depends_on:
      - mongo
      - ldap
    networks:
      - ldap-net
    ports:
      - 3000:3000

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
     - ./data/db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    ports:
      - 27018:27017
  
  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo




volumes:
  certs:
  ldap:
  ldap-conf:


networks:
  ldap-net:
  pip-net:
